# app/routers/tokens_recheck.py
# –î–æ–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–∑–¥–µ–ª —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥–æ–π /recheck_all (–±—ã—Å—Ç—Ä—ã–π health-check –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è).
from __future__ import annotations

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from app.database.models import Account
from app.services.token_health import recheck_user_tokens
from sqlalchemy import select
from app.database.models import async_session, Account

router = Router(name="tokens_recheck")


@router.message(Command("recheck_all"))
async def recheck_all_cmd(message: Message) -> None:
    """
    –ë—ã—Å—Ç—Ä—ã–π health-check –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á—ë—Ç –ø–æ –∫–∞–∂–¥–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.
    """
    tg_user_id = message.from_user.id

    # –£–∑–Ω–∞—ë–º —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á—Ç–æ–±—ã –∫—Ä–∞—Å–∏–≤–æ –≤—ã–≤–µ—Å—Ç–∏ –∏–º–µ–Ω–∞)
    async with async_session() as session:
        accs = (await session.execute(
            select(Account).where(Account.tg_user_id == tg_user_id).order_by(Account.id)
        )).scalars().all()

    if not accs:
        await message.answer("–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏. –î–æ–±–∞–≤—å —Ç–æ–∫–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ üìÇ Accounts.")
        return

    summary = await recheck_user_tokens(tg_user_id)

    # –°–æ–ø–æ—Å—Ç–∞–≤–∏–º id -> title
    titles = {a.id: (a.title or f"account {a.id}") for a in accs}

    lines = [f"‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {summary.get('total', 0)} ‚Äî ok: {summary.get('ok', 0)}, error: {summary.get('error', 0)}"]
    details = summary.get("details", [])
    for acc_id, title, status, msg in details:
        # –µ—Å–ª–∏ –≤ summary –∑–∞–≥–æ–ª–æ–≤–∫–∏ —É–∂–µ –µ—Å—Ç—å ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö, –∏–Ω–∞—á–µ –ø–æ–¥—Å—Ç–∞–≤–∏–º –∏–∑ titles
        name = title or titles.get(acc_id, f"account {acc_id}")
        line = f"‚Ä¢ {name} (id={acc_id}): {status or '‚Äî'}"
        if msg and status != "ok":
            line += f" ‚Äî {msg}"
        lines.append(line)

    await message.answer("\n".join(lines))
