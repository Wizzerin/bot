# app/routers/nav.py
# ------------------------------------------------------------
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è.
# ------------------------------------------------------------

from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    Union,
)

from app.services.safe_edit import safe_edit

router = Router()


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---

def main_menu_kb() -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É)."""
    rows = [
        [KeyboardButton(text="üìù Post now"), KeyboardButton(text="‚è± Schedule")],
        [KeyboardButton(text="üîë Accounts"), KeyboardButton(text="‚öôÔ∏è Settings")],
    ]
    return ReplyKeyboardMarkup(keyboard=rows, resize_keyboard=True)


def inline_main_kb() -> InlineKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–æ–µ –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù Post now", callback_data="post_now")],
        [InlineKeyboardButton(text="‚è± Schedule", callback_data="sched_menu")],
        [InlineKeyboardButton(text="üîë Accounts", callback_data="token_menu")],
        [InlineKeyboardButton(text="‚öôÔ∏è Settings", callback_data="settings_menu")],
    ])

def settings_menu_kb() -> InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîî Notifications", callback_data="notify_menu")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è Help", callback_data="help_show")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è Back", callback_data="back_main")],
    ])


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---

@router.message(CommandStart())
async def start_cmd(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    await message.answer(
        "Hi! This is a bot for posting to Threads.\n"
        "Use the buttons below to navigate.",
        reply_markup=main_menu_kb(),
    )


@router.message(Command("menu"))
@router.message(F.text.in_(["Menu", "menu", "–ú–µ–Ω—é", "–º–µ–Ω—é", "üè† Menu"]))
async def menu_cmd(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é.
    """
    await message.answer("Main menu:", reply_markup=inline_main_kb())


@router.callback_query(F.data == "back_main")
async def back_main_cb(cb: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é."""
    await safe_edit(cb.message, "Main menu:", reply_markup=inline_main_kb())
    await cb.answer()


@router.message(F.text == "‚öôÔ∏è Settings")
@router.callback_query(F.data == "settings_menu")
async def settings_menu_cb(event: Union[Message, CallbackQuery]):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
    text = "Settings:"
    markup = settings_menu_kb()
    if isinstance(event, Message):
        await event.answer(text, reply_markup=markup)
    else:
        await safe_edit(event.message, text, reply_markup=markup)
        await event.answer()
